name: Build Binaries

on:
  workflow_dispatch:
  push:
    paths:
    - "src/**"
    - "Cargo.toml"
    - "build.rs"
    - ".github/workflows/build.yml"
    branches: [ main ]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        config:
        - name: "Linux x86_64"
          id: linux-x86_64
          os: ubuntu-latest
          executable: 'geode'
          prebuild: 'export OPENSSL_STATIC=1'
          target: x86_64-unknown-linux-gnu
        - name: "Linux aarch64"
          id: linux-aarch64
          os: ubuntu-latest
          executable: 'geode'
          prebuild: 'export OPENSSL_STATIC=1'
          target: aarch64-unknown-linux-gnu

    name: Build ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}

    steps:
    - uses: actions/checkout@v4

    - uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: stable
        targets: ${{ matrix.config.target }}

    - uses: Swatinem/rust-cache@v2
      with:
        key: ${{ matrix.config.id }}

    - name: Build
      run: |
        ${{ matrix.config.prebuild }}
        cargo build --release --target ${{ matrix.config.target }}

    - name: Move to output folder
      shell: bash
      run: |
        mkdir ./out
        mv ./target/${{ matrix.config.target }}/release/${{ matrix.config.executable }} ./out

    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: geode-cli-${{ matrix.config.id }}
        path: ./out/

  publish:
    name: Publish
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Declare Version Variables
      id: ref
      run: |
        echo "version=$(cat VERSION | xargs)" >> $GITHUB_OUTPUT
        echo "hash=$(git rev-parse --short "$GITHUB_SHA")" >> $GITHUB_OUTPUT

    - name: Download Artifacts
      uses: actions/download-artifact@v4
      with:
        path: ${{ github.workspace }}/artifacts

    - name: Zip Linux x86_64 Artifacts
      uses: vimtor/action-zip@v1.2
      with:
        files: artifacts/geode-cli-linux-x86_64/geode
        dest: artifacts/geode-cli-${{ steps.ref.outputs.hash }}-linux-x86_64.zip

    - name: Zip Linux aarch64 Artifacts
      uses: vimtor/action-zip@v1.2
      with:
        files: artifacts/geode-cli-linux-aarch64/geode
        dest: artifacts/geode-cli-${{ steps.ref.outputs.hash }}-linux-aarch64.zip

    - name: Update Development Release
      uses: andelf/nightly-release@main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: nightly
        name: 'Development Release'
        body: Geode CLI development release for commit ${{ github.sha }}.
        files: |
          ./artifacts/*.zip
